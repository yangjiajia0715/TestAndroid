buildscript {
    repositories {
        //mavenCentral()
        //mavenLocal(
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.2'
    }
}

allprojects {
    repositories {
        //mavenLocal()
        google()
        jcenter()
    }
}

apply plugin: 'com.android.application'
apply from: file('utils.gradle')
apply plugin: 'com.antfortune.freeline'
apply plugin: 'org.greenrobot.greendao' // apply plugin
apply plugin: 'io.objectbox'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    useLibrary 'org.apache.http.legacy'

//    freeline {
//        hack true
//    }
    freeline {
        applicationProxy false
    }

    dataBinding {
        enabled = true
    }

    //recommend
    dexOptions {
        jumboMode = true
    }

    signingConfigs {
        yang {
            keyAlias 'yangjiajia'
            keyPassword 'yangjiajia'
            storeFile file('yangjiajia.keystore')
            storePassword 'yangjiajia'
        }
    }

    sourceSets {
//        main {
//            java.srcDirs = ['src/main/java'];
//        }

        fee {
            java.srcDirs = ['src/fee/java'];
        }

        free {
        }
    }

    productFlavors {
        fee {

        }

        free {

        }
    }

    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        flavorDimensions "fee"
//        String fileUploadAddress = hasProperty("FILE_UPLOAD_ADDRESS") ? getProperty("FILE_UPLOAD_ADDRESS") : "未配置";
        //调用的是闭包的属性，不是脚本
        String fileUploadAddress = (project.hasProperty("FILE_UPLOAD_ADDRESS") ? project.getProperty("FILE_UPLOAD_ADDRESS") : "未配置")
        System.out.println("文件上传地址-------fileUploadAddress=" + fileUploadAddress)
        def ip = project.hasProperty("IP_DEBUG") ? project.getProperty("IP_DEBUG") : "\"\""
        buildConfigField "String", "IP_ADDRESS", ip
        buildConfigField("String", "FILE_UPLOAD_ADDRESS", getFileUploadAddress())
        buildConfigField("String", "FILE_UPLOAD_ADDRESS_ORC", getFileUploadAddressOcr())
        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        release {

            minifyEnabled true
            proguardFile 'proguard.flags'
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.yang
            buildConfigField "String", "HHH", "\"releasereleasereleaserelease\""
        }

        debug {
            debuggable true
            minifyEnabled false
//            signingConfig signingConfigs.debug
        }
    }

    lintOptions {
        check 'NewApi'
    }

//    com.android.build.api.transform.TransformException: com.android.builder.packaging.DuplicateFileException: Duplicate files copied in APK META-INF/rxjava.properties
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
    buildToolsVersion '27.0.3'
}

dependencies {
    implementation 'com.android.support:support-v4:26.1.0'
    implementation 'com.android.support:support-vector-drawable:26.1.0'
    implementation fileTree(include: '*.jar', exclude: 'BDAutoUpdateSDK_20150605_V1.2.0.jar', dir: 'libs')

    implementation project(':zoomlibrary')
//    implementation project(':uikit')

    implementation "com.android.support:appcompat-v7:${rootProject.ext.supportVersion}"
    implementation "com.android.support:design:${rootProject.ext.supportVersion}"
    implementation "com.android.support:support-v13:${rootProject.ext.supportVersion}"
    implementation "com.android.support:recyclerview-v7:${rootProject.ext.supportVersion}"
    implementation "com.android.support:cardview-v7:${rootProject.ext.supportVersion}"
    implementation "com.android.support:multidex:${rootProject.ext.multidexVersion}"
    implementation "com.android.support.constraint:constraint-layout:${rootProject.ext.constraintVersion}"

    implementation "io.reactivex.rxjava2:rxandroid:${rootProject.ext.rxandroidVersion}"
    //Because RxAndroid releases are few and far between, it is recommended you also
    //explicitly depend on RxJava's latest version for bug fixes and new features.
    implementation "io.reactivex.rxjava2:rxjava:${rootProject.ext.rxjavaVersion}"

    implementation "com.squareup.okhttp3:okhttp:${rootProject.ext.okhttp3Version}"
    implementation "com.squareup.okhttp3:logging-interceptor:${rootProject.ext.okhttp3Version}"

    implementation "com.squareup.retrofit2:retrofit:${rootProject.ext.retrofitVersion}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${rootProject.ext.retrofit2AdapterRxjava2Version}"
    implementation "com.squareup.retrofit2:converter-gson:${rootProject.ext.retrofit2ConverterGsonVersion}"

    implementation "com.nineoldandroids:library:${rootProject.ext.nineoldandroidsVersion}"

    implementation "com.jakewharton:butterknife:${rootProject.ext.butterknifeVersion}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${rootProject.ext.butterknifeVersion}"

    implementation("com.alibaba.android:vlayout:${rootProject.ext.vlayoutVersion}@aar") {
        transitive = true
    }

    implementation "com.trello.rxlifecycle2:rxlifecycle:${rootProject.ext.rxlifecycleVersion}"
    // If you want to bind to Android-specific lifecycles
    implementation "com.trello.rxlifecycle2:rxlifecycle-android:${rootProject.ext.rxlifecycleVersion}"

// If you want pre-written Activities and Fragments you can subclass as providers
    implementation "com.trello.rxlifecycle2:rxlifecycle-components:${rootProject.ext.rxlifecycleVersion}"

    implementation 'com.github.flavienlaurent.datetimepicker:library:0.0.2'

    implementation 'com.alibaba:fastjson:1.1.59.android'

// 友盟统计
//    implementation 'com.umeng.analytics:analytics:latest.integration'
    implementation group: 'commons-io', name: 'commons-io', version: "${rootProject.ext.commonIoVersion}"
    implementation 'junit:junit:4.12'
    implementation 'org.greenrobot:greendao:3.2.2' // add library

//    implementation "com.github.bumptech.glide:glide:3.7.0"//2017-12-25 11:50:45 以前
    implementation 'com.github.bumptech.glide:glide:4.4.0'//2017-12-25 11:50:57
    annotationProcessor 'com.github.bumptech.glide:compiler:4.4.0'

    //add on 2017-10-31 一个一个测试
    implementation 'org.greenrobot:eventbus:3.1.1'
    implementation 'rongi.rotate-layout:rotate-layout:3.0.0'
    implementation 'com.github.hotchemi:permissionsdispatcher:2.4.0'
    implementation 'com.contrarywind:Android-PickerView:3.2.5'
    annotationProcessor 'com.github.hotchemi:permissionsdispatcher-processor:2.4.0'



}

task listJars {
    doLast {
        configurations.compile.each { File file -> println file.name }
    }
}

println "${project.name} hasProperty TINKER_ID=" + (hasProperty("TINKER_ID") ? getProperty("TINKER_ID") : "未配置")
println "${project.name} hasProperty yangjiajia=" + (hasProperty("yangjiajia") ? getProperty("yangjiajia") : "未配置")
println "${project.name} hasProperty org.gradle.java.home=" + (hasProperty("org.gradle.java.home") ? getProperty("org.gradle.java.home") : "未配置")
println "${project.name} hasProperty buildDir=" + buildDir.getAbsolutePath()
println "${project.name} hasProperty SIGNING_FILE_PATH=" + (hasProperty("SIGNING_FILE_PATH") ? getProperty("SIGNING_FILE_PATH") : "未配置")
println "${project.name} hasProperty FILE_UPLOAD_ADDRESS=" + (hasProperty("FILE_UPLOAD_ADDRESS") ? getProperty("FILE_UPLOAD_ADDRESS") : "未配置")
//println "${project.name} hasProperty gradleUserHomeDir=" + gradle.gradleUserHomeDir

def getFileUploadAddress() {
    return hasProperty("FILE_UPLOAD_ADDRESS") ? getProperty("FILE_UPLOAD_ADDRESS") : "\"未配置\""
}

def getFileUploadAddressOcr() {
    return hasProperty("FILE_UPLOAD_ADDRESS_OCR") ? getProperty("FILE_UPLOAD_ADDRESS_OCR") : "\"未配置\""
}


println "----------------GString-----------------"
//def startingAndEndingWithANewline = '''
//line one
//line two
//line three
//'''
//
//def startingAndEndingWithANewline2 = """\
//"line one"
//'line two'
//line three
//"""

//def startingAndEndingWithANewline3 = 'yang \'jia\' jia'
//def startingAndEndingWithANewline4 = 'yang\\jia'
//def startingAndEndingWithANewline5 = 'yang \"jia\" jia'
//println "---GString--startingAndEndingWithANewline=" + startingAndEndingWithANewline.startsWith("\n")
//println "---GString--startingAndEndingWithANewline2=" + startingAndEndingWithANewline2
//println "---GString--startingAndEndingWithANewline3=" + startingAndEndingWithANewline3
//println "---GString--startingAndEndingWithANewline4=" + startingAndEndingWithANewline4
//println "---GString--startingAndEndingWithANewline5=" + startingAndEndingWithANewline5

//def multilineSlashy = /one
//    two
//    three/
//
//println "---GString--multilineSlashy=" + multilineSlashy.contains('\n')
//println "---GString--startingAndEndingWithANewline2=" + startingAndEndingWithANewline2.contains("\n")
//
//def sum = "The sum of 2 and 3 equals ${2 + 3}"
//def sum2 ="The sum of 1 and 2 is equal to ${def a = 1; def b = 2; a + b}"
//def sum3 ="The sum of 1 and 2 is equal to ${"研究"; "好好最后"}"
//
//println "---GString--sum=" + sum
//println "---GString--sum2=" + sum2
//println "---GString--sum3=" + sum3
//def person = [name: 'Guillaume', age: 36]
//println "---GString--age=" + person.age

//println "----------------List----------------"
//
//def numberList = [11, 33, 44]
//println "---GString--numberList=" + numberList[0]
//println "---GString--numberList=" + numberList[-1]
//numberList << 66
//numberList << 88
//println "---GString--numberList=" + numberList[-1]
//println "---GString--numberList--[0,1,2]---"
//
//numberList[0,1,2] = [1,2,3]
//println "---GString--numberList=" + numberList[0]
//println "---GString--numberList=" + numberList.size()
//
//println "----------------Arrays----------------"
//int[] aaLi = [1,2,3]
//
//
//println "----------------Closure----------------"
//
//def listener = { e -> println "Clicked on $e.source" }
//
//Closure callback = { println 'Done!' }
//Closure<Boolean> isTextFile = {
//    File it -> it.name.endsWith('.txt')
//}
//
//println "----------------Closure----------------callback=" + callback()
//
//def isOdd = { int i-> i%2 == 1 }
//println "----------------Closure----------------isOdd=" + isOdd(3)
//println "----------------Closure----------------isOdd=" + idOdd.call()

//configurations {
//    compile
//}


println "------------configurations-----------------"

//task testConfig {
//    doLast {
//        println configurations.compile.name
//        println configurations['compile'].name
//    }
//}

greendao {
    schemaVersion 1

    daoPackage 'com.koma.greendao.gen'
    targetGenDir 'src/main/java'
}
